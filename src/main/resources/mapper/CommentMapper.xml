<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- ReviewBoardMapper.xml -->
<mapper namespace="com.movie_board.movie_review.repository.CommentMapper">

    <!-- 댓글 삽입 -->
    <insert id="insertComment">
        INSERT INTO comments (reviewId, userId,movieId, userName, content, parentId)
        VALUES (#{reviewId}, #{userId}, #{movieId}, #{userName}, #{content}, #{parentId})
    </insert>

    <select id="selectCommentsByReviewId" resultType="com.movie_board.movie_review.dto.CommentDto">
        SELECT * FROM comments
        WHERE reviewId = #{reviewId}
        ORDER BY createdAt DESC
    </select>

    <!-- 댓글 목록 조회 + 페이징 -->
    <select id="getCommentsByReviewIdWithPaging" resultType="com.movie_board.movie_review.dto.CommentDto">
        SELECT *
        FROM comments
        WHERE reviewId = #{reviewId}
        AND parentId IS NULL  <!-- 대댓글 제외 -->
        ORDER BY createdAt DESC
            LIMIT #{pageSize} OFFSET #{offset}
    </select>

    <!-- 댓글 개수 조회 -->
    <select id="getCommentCountByReviewId" resultType="int">
        SELECT COUNT(*)
        FROM comments
        WHERE reviewId = #{reviewId}
    </select>

    <!--  댓글 수정  -->
    <update id="updateComment">
        UPDATE comments
        SET content = #{content}, updatedAt = NOW()
        WHERE id = #{commentId} AND userId = #{userId}
    </update>

    <!--  댓글 삭제  -->
    <delete id="deleteComment">
        DELETE FROM comments WHERE id = #{commentId}
    </delete>

    <!-- 댓글 작성자 조회 -->
    <select id="getCommentOwner" resultType="java.lang.Long">
        SELECT userId
        FROM comments
        WHERE id = #{commentId}
    </select>


    <!-- 특정 댓글의 대댓글 -->
    <select id="selectRepliesByParentId" resultType="com.movie_board.movie_review.dto.CommentDto">
        SELECT * FROM comments
        WHERE parentId = #{parentId}
        ORDER BY createdAt DESC
    </select>

    <!-- 대댓글 추가 -->
    <insert id="insertReply" parameterType="com.movie_board.movie_review.dto.CommentDto">
        INSERT INTO comments (reviewId, movieId, userId, userName, content, parentId, createdAt, updatedAt)
        VALUES (#{reviewId}, #{movieId}, #{userId}, #{userName}, #{content}, #{parentId}, NOW(), NOW())
    </insert>
</mapper>